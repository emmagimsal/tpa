package com.everis.jpa.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.everis.jpa.entity.Alumno;
import com.everis.jpa.repository.AlumnoRepository;


@Controller
@Profile({ "dev", "default" })
public class ModelController {

	@Autowired
	AlumnoRepository alumnosRepo;

	@RequestMapping(path = "/usuario/list")
	public String list(Model model) {
		model.addAttribute("listadoUsuarios", alumnosRepo.findAll());
		 
		return "model/usuario/list";
	}
	

	
	@RequestMapping(path = "/alumno/add", method = RequestMethod.GET)
	public String add(Model model) {

		model.addAttribute("alumno", new Alumno());

		return "model/usuario/edit";
	}

	@RequestMapping(path = "/alumno/edit/{id}", method = RequestMethod.GET)
	public String edit(Model model, @PathVariable(value = "id") String id) {
		
		model.addAttribute("alumno", 	alumnosRepo.findById(Long.valueOf(id)));
		
		return "model/alumno/edit";
	}

	@RequestMapping(path = "/alumno/create", method = RequestMethod.POST)
	public ModelAndView save(@ModelAttribute @Valid Alumno alumno,
			BindingResult bindingResult, Model model) {

		ModelAndView mav = new ModelAndView();

		if (bindingResult.hasErrors()) {
			mav.setViewName("model/alumno/edit");
			return mav;
		}

		alumnosRepo.save(alumno);
		mav.setViewName("redirect:/alumno/list");
		return mav;
	}

	@RequestMapping(path = "/alumno/delete/{id}", method = RequestMethod.GET)
	public String delete(@PathVariable(name = "id") String id , Model model) {
		
		try {
			alumnosRepo.deleteById((Long.valueOf(id)));
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return "redirect:/alumno/list/";
	}
	
}